# Simple Tic Tac Toe using Minimax (Human vs AI)

board = [' ' for _ in range(9)]

def print_board():
    for i in range(0, 9, 3):
        print(f"{board[i]} | {board[i+1]} | {board[i+2]}")
        if i < 6:
            print("--+---+--")

def is_winner(b, p):
    wins = [(0,1,2),(3,4,5),(6,7,8),(0,3,6),(1,4,7),(2,5,8),(0,4,8),(2,4,6)]
    return any(b[x] == b[y] == b[z] == p for x,y,z in wins)

def minimax(b, is_max):
    if is_winner(b, 'O'): return 1
    if is_winner(b, 'X'): return -1
    if ' ' not in b: return 0

    if is_max:
        best = -100
        for i in range(9):
            if b[i] == ' ':
                b[i] = 'O'
                best = max(best, minimax(b, False))
                b[i] = ' '
        return best
    else:
        best = 100
        for i in range(9):
            if b[i] == ' ':
                b[i] = 'X'
                best = min(best, minimax(b, True))
                b[i] = ' '
        return best

def find_best_move():
    best_val = -100
    move = 0
    for i in range(9):
        if board[i] == ' ':
            board[i] = 'O'
            val = minimax(board, False)
            board[i] = ' '
            if val > best_val:
                best_val = val
                move = i
    return move

def play_game():
    print("Tic Tac Toe (You = X, AI = O)")
    while True:
        print_board()
        move = int(input("Enter your move (1-9): ")) - 1
        if board[move] != ' ':
            print("Invalid move! Try again.")
            continue
        board[move] = 'X'
        if is_winner(board, 'X'):
            print_board()
            print("You win! ðŸŽ‰")
            break
        if ' ' not in board:
            print_board()
            print("It's a draw!")
            break
        ai_move = find_best_move()
        board[ai_move] = 'O'
        if is_winner(board, 'O'):
            print_board()
            print("AI wins! ðŸ¤–")
            break
        if ' ' not in board:
            print_board()
            print("It's a draw!")
            break

play_game()
